<?php

namespace app\models;

use Aws\S3\Exception\S3Exception;
use Aws\S3\S3Client;
use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\Expression;
use yii\helpers\ArrayHelper;
use yii\web\UploadedFile;

/**
 * This is the model class for table "video".
 *
 * @property integer $id
 * @property string $create_at
 * @property string $update_at
 * @property string $title
 * @property string $description
 * @property string $object_url
 * @property string $preview_url
 * @property integer $category_id
 *
 * @property Category $category
 */
class Video extends \yii\db\ActiveRecord
{

    /**
     * @var UploadedFile
     */
    public $videoFile;


    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'create_at',
                'updatedAtAttribute' => 'update_at',
                'value' => new Expression('NOW()'),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'video';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title'], 'required'],
            [['create_at', 'update_at'], 'safe'],
            [['description'], 'string'],
            [['category_id'], 'integer'],
            ['videoFile', 'file'],
            [['title', 'object_url', 'preview_url'], 'string', 'max' => 255]
        ];
    }

    public function beforeSave($insert)
    {
        if($this->uploadAmazon()){
            return parent::beforeSave($insert); // TODO: Change the autogenerated stub
        }

    }

    private function uploadAmazon(){

        $config = ArrayHelper::map(Config::find()->all(), 'name', 'value');

        $s3 = new S3Client([
            'version'     => 'latest',
            'region'      => 'us-west-2',
            'credentials' => [
                'key'    => $config['amazon_key'],
                'secret' => $config['amazon_secret']
            ]
        ]);
        try{
            $res = $s3->putObject([
                'Bucket' => $config['amazon_bucket'],
                'Key' => time() . '.' . $this->videoFile->extension,
                'Body' => fopen($this->videoFile->tempName, 'rb'),
                'ACL' => 'public-read'
            ]);

            $this->object_url = $res['ObjectURL'];
        } catch(S3Exception $e){
            echo $e->getMessage();
            Yii::$app->session->setFlash('error', $e->getMessage());
        }

        return true;
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'create_at' => 'Create At',
            'update_at' => 'Update At',
            'title' => 'Title',
            'description' => 'Description',
            'object_url' => 'Object Url',
            'preview_url' => 'Preview Url',
            'category_id' => 'Category ID',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategory()
    {
        return $this->hasOne(Category::className(), ['id' => 'category_id']);
    }
}
